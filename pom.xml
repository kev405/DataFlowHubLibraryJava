<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                              https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.practice</groupId>
  <artifactId>DataFlowHubLibraryJava</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <!-- 1️⃣ Declarar los módulos -->
  <modules>
    <module>lib</module>
    <module>core</module>
    <module>api-service</module>
  </modules>
  <!-- 2️⃣ Definir propiedades comunes -->
  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <junit.version>5.11.0</junit.version>
    <assertj.version>3.26.0</assertj.version>
    <jacoco.version>0.8.10</jacoco.version>
    <jmh.version>1.37</jmh.version>
    <spring.boot.version>3.5.4</spring.boot.version>
    <quality.config.dir>${maven.multiModuleProjectDirectory}/config/quality</quality.config.dir>
  </properties>
  <!-- 3️⃣ Gestionar plugins y deps que heredan los sub-poms -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>nl.jqno.equalsverifier</groupId>
        <artifactId>equalsverifier</artifactId>
        <version>3.16</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${jmh.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.9</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.10.1</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <!-- Compilador -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <release>${java.version}</release>
          </configuration>
        </plugin>
        <!-- 1. Generar Javadoc (HTML 5, suprime doclint menores) -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.5.0</version>
          <configuration>
            <additionalJOption>-Xdoclint:none</additionalJOption>
            <source>${java.version}</source>
            <failOnError>true</failOnError>
            <encoding>UTF-8</encoding>
            <doclint>none</doclint>
            <show>public</show>
            <excludePackageNames>*.internal:*.bench</excludePackageNames>
          </configuration>
        </plugin>

        <!-- SpotBugs -->
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.8.3.0</version>
          <configuration>
            <effort>Max</effort>
            <threshold>High</threshold>    <!-- Build falla en ≥ High -->
            <excludeFilterFile>${quality.config.dir}/spotbugs-exclude.xml</excludeFilterFile>
            <xmlOutput>true</xmlOutput>
            <htmlOutput>true</htmlOutput>
            <outputDirectory>${project.build.directory}/quality-reports</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <goals><goal>check</goal></goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <!-- Checkstyle -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <configLocation>${quality.config.dir}/checkstyle.xml</configLocation>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>       <!-- build rompe en errores -->
            <outputDirectory>${project.build.directory}/quality-reports</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <id>validate-style</id>
              <phase>verify</phase>
              <goals><goal>check</goal></goals>
            </execution>
          </executions>
        </plugin>
        <!-- PMD -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.21.0</version>
          <configuration>
            <rulesets>
              <ruleset>${quality.config.dir}/pmd-rules.xml</ruleset>
            </rulesets>
            <failOnViolation>true</failOnViolation>
            <targetJdk>17</targetJdk>
            <linkXref>false</linkXref>
            <outputDirectory>${project.build.directory}/quality-reports</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals><goal>check</goal></goals>
            </execution>
          </executions>
        </plugin>
        <!-- Tests JUnit 5 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <useModulePath>false</useModulePath>
            <includes>
              <include>**/*Test.java</include>
            </includes>
          </configuration>
        </plugin>
        <!-- Benchmarks (JMH) -->
        <plugin>
          <groupId>io.gatling</groupId>
          <artifactId>jmh-maven-plugin</artifactId>
          <version>0.7.2</version>
          <configuration>
            <includeTests>false</includeTests>   <!-- benchmarks ≠ tests -->
          </configuration>
          <executions>
            <execution>
              <id>benchmark</id>
              <goals><goal>benchmark</goal></goals>
            </execution>
          </executions>
        </plugin>
        <!-- JaCoCo cobertura -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <!-- Configuration for command line execution -->
            <rules>
              <rule>
                <element>BUNDLE</element>
                <limits>
                  <limit>
                    <counter>INSTRUCTION</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>0.70</minimum>
                  </limit>
                </limits>
              </rule>
            </rules>
            <excludes>
              <exclude>com/bench/**</exclude>
              <exclude>com/bench/jmh_generated/**</exclude>
              <exclude>com/practice/bench/**</exclude>
              <exclude>com/practice/bench/jmh_generated/**</exclude>
              <exclude>com/practice/apiservice/mapper/**</exclude>
              <exclude>com/practice/apiservice/map/**</exclude>
              <exclude>com/practice/apiservice/entity/**</exclude>
            </excludes>
          </configuration>
          <executions>
            <!-- prepara agente para instrumentar código -->
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <!-- genera reporte -->
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <!-- verifica ≥70 % - solo para módulos JAR -->
            <execution>
              <id>verify-coverage</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <skip>${maven.test.skip}</skip>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>INSTRUCTION</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.70</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <!-- Activa generación solo cuando se ejecute con -Pdocumentation -->
    <profile>
      <id>documentation</id>
      <activation><activeByDefault>false</activeByDefault></activation>
      <build>
        <plugins>
          <!-- Javadoc generación agregada -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>aggregate-javadoc</id>
                <phase>verify</phase>
                <goals><goal>aggregate</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
